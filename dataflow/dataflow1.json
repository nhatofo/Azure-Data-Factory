{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "MovieADLS"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "Select1"
				},
				{
					"name": "Filter1"
				},
				{
					"name": "DerivedPrimaryGenre"
				},
				{
					"name": "RankMoviesByRatings"
				},
				{
					"name": "RankMovies"
				}
			],
			"script": "parameters{\n\tparameter1 as string\n}\nsource(output(\n\t\tmovie as string,\n\t\ttitle as string,\n\t\tgenres as string,\n\t\tyear as string,\n\t\tRating as string,\n\t\t{Rotton Tomato} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> MovieADLS\nMovieADLS select(mapColumn(\n\t\tmovie,\n\t\ttitle,\n\t\tgenres,\n\t\tyear,\n\t\t{Rotten Tomato} = {Rotton Tomato}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 filter(toInteger(year) > 1950) ~> Filter1\nFilter1 derive(PrimaryGenre = iif(locate('|', genres)>1,left(genres,locate('|', genres)-1),genres),\n\t\tyear = year) ~> DerivedPrimaryGenre\nDerivedPrimaryGenre sort(desc({Rotten Tomato}, true)) ~> RankMoviesByRatings\nDerivedPrimaryGenre rank(desc({Rotten Tomato}, true),\n\toutput({Rotten Tomato} as long)) ~> RankMovies"
		}
	}
}